class Solution {
public:
int solve(int idx, int buy,vector<int> &prices,vector<vector<int>> &dp)
{
    if(idx == prices.size())return 0;
    if(dp[idx][buy]!=-1) return dp[idx][buy];
    int profit=0;
    if(buy==0)
    {
                                  //buy                        //not buy
        profit=max(-prices[idx] +solve(idx+1,1,prices,dp),solve(idx+1,0,prices,dp));
    
    }

    else
    {
                           //sell                          //not sell
        profit=max(prices[idx]+solve(idx+1,0,prices,dp),solve(idx+1,1,prices,dp));
        
    }

    return dp[idx][buy]=profit;


}
    int maxProfit(vector<int>& prices) {
int n=prices.size();
        vector<int> next(2);

        next[0]=0;
        next[1]=0;
        for(int i=n-1;i>=0;i--)
        {
            vector<int> curr(2);
            
                curr[0]= max(-prices[i]+ next[1], next[0]);
                curr[1]=max(prices[i]+ next[0], next[1]);
            
            next=curr;
        }

        return next[0];
    }
};