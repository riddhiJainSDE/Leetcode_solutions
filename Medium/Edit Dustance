class Solution {
public:
// int solve(int i, int j, string& w1, string&w2, vector<vector<int>> &dp)
// {
//     if(j<0)return i+1;
//     if(i<0)return j+1;
//     if(dp[i][j]!=-1 ) return dp[i][j];
//     if(w1[i]!=w2[j])
//     {
//         int ans=min(solve(i-1, j, w1, w2, dp), solve(i, j-1, w1,w2, dp));
//         ans=min(ans, solve(i-1, j-1, w1, w2, dp));
//         return dp[i][j]=1+ans;
//     }

//     else
//     return dp[i][j]= solve(i-1, j-1, w1, w2, dp);
// }
     int minDistance(string w1, string w2) {
        int n=w1.size();
        int m=w2.size();
        vector<int> prev(m+1),curr(m+1);

        for(int j=0;j<=m;j++)
        {
            prev[j]=j;
        }

        for(int i=1;i<=n;i++)
        {
            curr[0]=i;
            for(int j=1;j<=m;j++)
            {
                if(w1[i-1]!=w2[j-1])
                curr[j]=1+min(prev[j], min(curr[j-1], prev[j-1]));

                
            else
            curr[j]=prev[j-1];
            }

            prev=curr;

        }

        return prev[m];
    }
};